syntax = "proto3";

package travisci.images;
option go_package = "images";

service Images {
  rpc ListBuilds(ListBuildsRequest) returns (ListBuildsResponse);
  rpc StartBuild(StartBuildRequest) returns (StartBuildResponse);

  rpc DownloadRecord(DownloadRecordRequest) returns (DownloadRecordResponse);
  rpc GetRecordURL(GetRecordURLRequest) returns (GetRecordURLResponse);
  rpc AttachRecord(AttachRecordRequest) returns (AttachRecordResponse);
}

message ListBuildsRequest {
}

message ListBuildsResponse {
  repeated Build  builds  = 1;
}

message StartBuildRequest {
  // The name of the Packer template that should be built.
  string  name      = 1;
  // The Git revision of the Packer templates repo that should be checked out for the build.
  string  revision  = 2;
}

message StartBuildResponse {
  // The build that was created.
  Build  build  = 1;
}

message DownloadRecordRequest {
  // The ID of the record to download.
  int64  id  = 1;
}

message DownloadRecordResponse {
  // The contents of the record.
  bytes  contents  = 1;
}

message GetRecordURLRequest {
  // The ID of the record to get a download URL for.
  int64  id  = 1;
}

message GetRecordURLResponse {
  // The public S3 URL for the build record.
  string  url  = 1;
}

message AttachRecordRequest {
  int64   id         = 1;
  string  file_name  = 2;
  bytes   contents   = 3;
}

message AttachRecordResponse {
  // The record that was created.
  Record  record  = 1;
}

message Build {
  enum Status {
    CREATED    = 0;
    STARTED    = 1;
    SUCCEEDED  = 2;
    FAILED     = 3;
  }

  int64   id             = 1;
  string  name           = 2;
  string  revision       = 3;
  string  full_revision  = 4;
  Status  status         = 5;
  int64   created_at     = 6;
  int64   started_at     = 7;
  int64   finished_at    = 8;
}

message Record {
  int64   id         = 1;
  int64   build_id   = 2;
  string  file_name  = 3;
  string  s3_key     = 4;
}
